<UserControl x:Class="HolzTools.UserControls.LedFanControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HolzTools.UserControls"
             xmlns:gu="http://gu.se/Geometry"
             xmlns:main="clr-namespace:HolzTools"
             mc:Ignorable="d" d:DesignWidth="476" d:DesignHeight="476"
             d:DataContext="{d:DesignInstance local:LedFanControl, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <SolidColorBrush x:Key="borderColor" Color="#AAAAAA"/>
        <SolidColorBrush x:Key="fillColor" Color="#666666"/>
        <PathGeometry x:Key="fanBladeData" Figures="M10,250Q5,200,185,220Q180,230,182,240Q60,280,41,310Q30,330,21,310Q6,270,10,250"/>
        <Storyboard x:Key="rotateFanStoryboard">
            <DoubleAnimation 
                Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                From="0" To="-360" Duration="0:0:2" RepeatBehavior="Forever" 
                Timeline.DesiredFrameRate="30"/>
        </Storyboard>
    </UserControl.Resources>
    <Viewbox>
        <Grid Width="476" Height="476">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Ellipse Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="2" 
                     Fill="Transparent" RenderTransformOrigin="0.5025,0.5"
                     x:Name="rainbowEllipse" >
                <Ellipse.RenderTransform>
                    <RotateTransform Angle="0" x:Name="rainbowRotate"/>
                </Ellipse.RenderTransform>
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Mode, 
                                                           RelativeSource={RelativeSource AncestorType={x:Type local:LedFanControl}}}" Value="Rainbow">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
                <Ellipse.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard x:Name="rainbowRotateStoryboard"
                                        Timeline.DesiredFrameRate="20">
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)"     
                                    Storyboard.TargetName="rainbowEllipse"     
                                    From="0.0" To="360" 
                                    Duration="{Binding Path=FanSpeed, 
                                                       RelativeSource={RelativeSource AncestorType={x:Type local:LedFanControl}}}"
                                    RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Ellipse.Triggers>
                <Ellipse.Effect>
                    <gu:HsvWheelEffect/>
                </Ellipse.Effect>
            </Ellipse>

            <Ellipse Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="0" 
                     Fill="{Binding Path=OverlayColor, 
                                    RelativeSource={RelativeSource AncestorType={x:Type local:LedFanControl}}}"/>

            <Ellipse Fill="{Binding Path=PreviewColor, 
                                    RelativeSource={RelativeSource AncestorType={x:Type local:LedFanControl}}}"
                     StrokeThickness="2" Grid.ColumnSpan="3"
                     Grid.RowSpan="3" Stroke="{StaticResource borderColor}"
                     RenderTransformOrigin="0.5, 0.5">
                <Ellipse.RenderTransform>
                    <RotateTransform Angle="0" x:Name="fanPreview"/>
                </Ellipse.RenderTransform>
            </Ellipse>

            <!-- fan blades -->
            <Grid Grid.ColumnSpan="3" Grid.RowSpan="3" 
                  RenderTransformOrigin="0.5, 0.5">
                <Grid.RenderTransform>
                    <!-- giving the transform a name tells the framework not to freeze it -->
                    <RotateTransform x:Name="noFreeze"/>
                </Grid.RenderTransform>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger 
                                Binding="{Binding Path=EnableFanAnim, 
                                                   RelativeSource={RelativeSource AncestorType={x:Type main:MainWindow}}}"
                                 Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="rotateBeginStoryboard"
                                        Storyboard="{StaticResource rotateFanStoryboard}"   />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard
                                        BeginStoryboardName="rotateBeginStoryboard"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}"/>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}" 
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="40"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}" 
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="80"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="120"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}" 
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="160"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="200"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="240"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="280"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Stroke="{StaticResource borderColor}" StrokeThickness="2" 
                      Grid.ColumnSpan="3" Grid.RowSpan="3" 
                      Fill="{StaticResource fillColor}"
                      Data="{StaticResource fanBladeData}" 
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="320"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>

            <Ellipse Fill="{StaticResource fillColor}" Grid.Column="1" Grid.Row="1"
                     Stroke="{StaticResource borderColor}" StrokeThickness="2"/>
        </Grid>
    </Viewbox>
</UserControl>
